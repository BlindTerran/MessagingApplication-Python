{% extends 'base.jinja' %}

{% block content %}
<div class="left-sidebar">
    <!-- svg icon, generated by Uizard -->
    <div class="icon-container">
        <a href=" 'knowledge_repository', username=username, theme_colour=theme_colour) }}">
            <svg class="knowledge-repo-icon" viewBox="0 0 24 24">
                <path d="M0 0h24v24H0V0z" fill="none"></path>
                <path d="M15 3H5c-1.1 0-1.99.9-1.99 2L3 19c0 1.1.89 2 1.99 2
                        H19c1.1 0 2-.9 2-2V9l-6-6zM8 17c-.55 0-1-.45-1-1s.45-1 
                        1-1 1 .45 1 1-.45 1-1 1zm0-4c-.55 0-1-.45-1-1s.45-1 1-1 
                        1 .45 1 1-.45 1-1 1zm0-4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 
                        1 1-.45 1-1 1zm6 1V4.5l5.5 5.5H14z">
                </path>
            </svg>
        </a >
        <div class="chat-icon-container">
        <div class="indicator-bar"></div>
            <a href="{{ url_for('chat', username=username, theme_colour=theme_colour) }}">
                <svg class="chat-icon" viewBox="0 0 512 512">
                    <path d="M256 32C114.6 32 0 125.1 0 240c0 49.63 21.35 94.98 56.97 130.7
                            c-12.5 50.37-54.27 95.27-54.77 95.77c-2.25 2.25-2.875 5.734-1.5 8.734
                            C1.979 478.2 4.75 480 8 480c66.25 0 115.1-31.76 140.6-51.39
                            C181.2 440.9 217.6 448 256 448c141.4 0 255.1-93.13 255.1-208S397.4 32 256 32z">
                    </path>
                </svg>
            </a >
        </div>
        <a href="{{ url_for('friends', username=username, theme_colour=theme_colour) }}">
            <svg class="friends-icon" viewBox="0 0 24 24">
                <path fill="none" d="M0 0h24v24H0z"></path>
                <path d="M16.67 13.13C18.04 14.06 19 15.32 19 17v3h4v-3c0-2.18-3.57-3.47-6.33-3.87zM9 4a4 4 0 1 0 0 8 
                        4 4 0 1 0 0-8zM15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4c-.47 0-.91.1-1.33.24a5.98 5.98 0 0 1 0 7.52
                        c.42.14.86.24 1.33.24zm-6 1c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z" fill-rule="evenodd">
                </path>
            </svg>
        </a >
    </div>
</div>
    <h1>Knowledge Repository</h1>
    <div>
        <h2>Create Article</h2>
        <input id="article_title" placeholder="Title"/>
        <textarea id="article_content" placeholder="Content"></textarea>
        <button onclick="createArticle()">Create</button>
    </div>
    <div>
        <h2>Articles</h2>
        {% for article in articles %}
            <div>
                <h3>{{ article.title }}</h3>
                <p>{{ article.content }}</p>
                <p>Author: {{ article.author }}</p>
                <div>
                    {% if user.is_staff or article.author == user.username %}
                        <button onclick="editArticle({{ article.id }})">Edit</button>
                        <button onclick="deleteArticle({{ article.id }})">Delete</button>
                    {% endif %}
                </div>
                <div>
                    <h4>Comments</h4>
                    {% for comment in article.comments %}
                        <div>
                            <p>{{ comment.content }}</p>
                            <p>Author: {{ comment.author }}</p>
                            {% if user.is_staff %}
                                <button onclick="deleteComment({{ comment.id }})">Delete</button>
                            {% endif %}
                        </div>
                    {% endfor %}
                    <textarea id="comment_content_{{ article.id }}" placeholder="Add a comment"></textarea>
                    <button onclick="addComment({{ article.id }})">Add Comment</button>
                </div>
            </div>
        {% endfor %}
    </div>

    <script>
        async function createArticle() {
            let title = document.getElementById('article_title').value;
            let content = document.getElementById('article_content').value;
            let response = await axios.post('/create_article', { title: title, content: content });
            if (response.data.success) {
                window.location.reload();
            } else {
                alert(response.data.error);
            }
        }

        async function editArticle(articleId) {
            let title = prompt('Enter new title:');
            let content = prompt('Enter new content:');
            let response = await axios.post('/edit_article', { article_id: articleId, title: title, content: content });
            if (response.data.success) {
                window.location.reload();
            } else {
                alert(response.data.error);
            }
        }

        async function deleteArticle(articleId) {
            let response = await axios.post('/delete_article', { article_id: articleId });
            if (response.data.success) {
                window.location.reload();
            } else {
                alert(response.data.error);
            }
        }

        async function addComment(articleId) {
            let content = document.getElementById('comment_content_' + articleId).value;
            let response = await axios.post('/add_comment', { article_id: articleId, content: content });
            if (response.data.success) {
                window.location.reload();
            } else {
                alert(response.data.error);
            }
        }

        async function deleteComment(commentId) {
            let response = await axios.post('/delete_comment', { comment_id: commentId });
            if (response.data.success) {
                window.location.reload();
            } else {
                alert(response.data.error);
            }
        }
    </script>
{% endblock %}
