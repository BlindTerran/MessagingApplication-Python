<!-- 
Sign up page, pretty much the same as login.
-->
{% extends 'base.jinja' %}


{% block content %} 
    <h1>Sign Up</h1>
    <p>Username</p>
    <input id="username"/>
    <p>Password</p>
    <input id="password" type="password"/>
    <button onclick="signup()">Sign up</button>

    <script>
         function isValidURL(string) {
            if (string.length == 0) {
                return false;
            }
            if (string[0] == "/") {
                return true;
            }
            return false;
        }

        // this function is identical to login(), see login.jinja
        async function signup() {
            // Generate an Elliptic Curve key pair
            const keyPair = await window.crypto.subtle.generateKey(
                {
                    name: "ECDSA",
                    namedCurve: "P-256"
                },
                true,
                ["sign", "verify"]
            );

            // Export the public key in PEM format
            const publicKey = await window.crypto.subtle.exportKey(
                "spki",
                keyPair.publicKey
            );

            // Convert the public key to base64
            const userAPublicKey = btoa(String.fromCharCode.apply(null, new Uint8Array(publicKey)));

            // Send the public key along with username and password
            let loginURL = "{{ url_for('signup_user') }}";
            let res = await axios.post(loginURL, {
                username: $("#username").val(),
                password: $("#password").val(),
                public_key: userAPublicKey
            });

            // Handle response
            if (!isValidURL(res.data)) {
                alert(res.data);
                return;
            }
            window.open(res.data, "_self")
        }

    </script>
{% endblock %}